- name: Set cluster
  shell: |
    kubectl config set-cluster {{ cluster_name }} \
          --certificate-authority={{ kube_cert_dir }}/ca.pem \
          --embed-certs=true \
          --server=https://{{ kube_apiserver_ip }}:{{ kube_apiserver_port }} \
          --kubeconfig={{ kube_dir }}/{{ inventory_hostname }}.kubeconfig
- name: Set credentials
  shell: |
    kubectl config set-credentials system:node:{{ inventory_hostname }} \
          --client-certificate={{ kube_cert_dir }}/{{ inventory_hostname }}.pem \
          --client-key={{ kube_cert_dir }}/{{ inventory_hostname }}-key.pem \
          --embed-certs=true \
          --kubeconfig={{ kube_dir }}/{{ inventory_hostname }}.kubeconfig
- name: Set context
  shell: |
    kubectl config set-context default \
          --cluster={{ cluster_name }} \
          --user=system:node:{{ inventory_hostname }} \
          --kubeconfig={{ kube_dir }}/{{ inventory_hostname }}.kubeconfig
- name: Ensure default context
  shell: |
    kubectl config use-context default \
          --kubeconfig={{ kube_dir }}/{{ inventory_hostname }}.kubeconfig
- name: Check if kubelet binary already installed
  stat:
    path: /usr/bin/kubelet
  register: kubelet
- name: Download kubelet binary
  get_url:
    url: "{{ kubelet_url }}"
    dest: /usr/bin/kubelet
    mode: 0755
  when: not kubelet.stat.exists
- name: "Create kubernetes dirs if not exist"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ cni_conf_dir }}"
- name: Ensure kubelet env vars
  template:
    src: kubelet.env.j2
    dest: "{{ kube_dir }}/kubelet.env"
    mode: 0644
- name: Ensure kuberouter config
  template:
    src: 10-kuberouter.conf.j2
    dest: "{{ cni_conf_dir }}/10-kuberouter.conf"
    mode: 0644
- name: Ensure flannel config
  template:
    src: 10-flannel.conf.j2
    dest: "{{ cni_conf_dir }}/10-flannel.conf"
    mode: 0644
- name: Ensure systemd unit file for kubelet
  template:
    src: kubelet.service.j2
    dest: /lib/systemd/system/kubelet.service
    mode: 0644
- name: Ensure kubelet systemd service
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: yes

